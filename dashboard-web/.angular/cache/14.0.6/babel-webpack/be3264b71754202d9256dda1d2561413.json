{"ast":null,"code":"var charToInteger = {};\nvar integerToChar = {};\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split('').forEach(function (char, i) {\n  charToInteger[char] = i;\n  integerToChar[i] = char;\n});\n\nfunction decode(string) {\n  var result = [];\n  var shift = 0;\n  var value = 0;\n\n  for (var i = 0; i < string.length; i += 1) {\n    var integer = charToInteger[string[i]];\n\n    if (integer === undefined) {\n      throw new Error('Invalid character (' + string[i] + ')');\n    }\n\n    var hasContinuationBit = integer & 32;\n    integer &= 31;\n    value += integer << shift;\n\n    if (hasContinuationBit) {\n      shift += 5;\n    } else {\n      var shouldNegate = value & 1;\n      value >>>= 1;\n\n      if (shouldNegate) {\n        result.push(value === 0 ? -0x80000000 : -value);\n      } else {\n        result.push(value);\n      } // reset\n\n\n      value = shift = 0;\n    }\n  }\n\n  return result;\n}\n\nfunction encode(value) {\n  var result;\n\n  if (typeof value === 'number') {\n    result = encodeInteger(value);\n  } else {\n    result = '';\n\n    for (var i = 0; i < value.length; i += 1) {\n      result += encodeInteger(value[i]);\n    }\n  }\n\n  return result;\n}\n\nfunction encodeInteger(num) {\n  var result = '';\n\n  if (num < 0) {\n    num = -num << 1 | 1;\n  } else {\n    num <<= 1;\n  }\n\n  do {\n    var clamped = num & 31;\n    num >>>= 5;\n\n    if (num > 0) {\n      clamped |= 32;\n    }\n\n    result += integerToChar[clamped];\n  } while (num > 0);\n\n  return result;\n}\n\nexport { decode, encode };","map":null,"metadata":{},"sourceType":"module"}